# Exploring Application Programming Interface(API's) or web services, its advantages

## API?
APIs are mechanisms that enable two software components to communicate with each other using a set of definitions 
and protocols. For example, the weather bureau’s software system contains daily weather data. 
The weather app on your phone “talks” to this system via APIs and shows you daily weather updates on your phone.

What does API stand for?
API stands for Application Programming Interface. In the context of APIs, the word Application refers to 
any software with a distinct function. Interface can be thought of as a contract of service between two 
applications. This contract defines how the two communicate with each other using requests and responses. 
Their API documentation contains information on how developers are to structure those requests and responses.

How do APIs work?
API architecture is usually explained in terms of client and server. The application sending the request 
is called the client, and the application sending the response is called the server. So in the weather example, 
the bureau’s weather database is the server, and the mobile app is the client. 

There are four different ways that APIs can work depending on when and why they were created.

SOAP APIs 
These APIs use Simple Object Access Protocol. Client and server exchange messages using XML. This is a less 
flexible API that was more popular in the past.

RPC APIs
These APIs are called Remote Procedure Calls. The client completes a function (or procedure) on the server, 
and the server sends the output back to the client.

Websocket APIs
Websocket API is another modern web API development that uses JSON objects to pass data. A WebSocket API supports
two-way communication between client apps and the server. The server can send callback messages to connected 
clients, making it more efficient than REST API.

REST APIs
These are the most popular and flexible APIs found on the web today. The client sends requests to the server as 
data. The server uses this client input to start internal functions and returns output data back to the client. 
Let’s look at REST APIs in more detail below.

What are REST APIs?
REST stands for Representational State Transfer. REST defines a set of functions like GET, PUT, DELETE, etc. 
that clients can use to access server data. Clients and servers exchange data using HTTP.

The main feature of REST API is statelessness. Statelessness means that servers do not save client data between 
requests. Client requests to the server are similar to URLs you type in your browser to visit a website. 
The response from the server is plain data, without the typical graphical rendering of a web page.

What is web API?
A Web API or Web Service API is an application processing interface between a web server and web browser. 
All web services are APIs but not all APIs are web services. REST API is a special type of Web API that uses 
the standard architectural style explained above.

The different terms around APIs, like Java API or service APIs, exist because historically, APIs were created 
before the world wide web. Modern web APIs are REST APIs and the terms can be used interchangeably.

What are API integrations?
API integrations are software components that automatically update data between clients and servers. 
Some examples of API integrations are when automatic data sync to the cloud from your phone image gallery, or 
the time and date automatically sync on your laptop when you travel to another time zone. Enterprises can also 
use them to efficiently automate many system functions.

What are the different types of APIs?
APIs are classified both according to their architecture and scope of use. We have already explored the main 
types of API architectures so let’s take a look at the scope of use.

Private APIs
These are internal to an enterprise and only used for connecting systems and data within the business.

Public APIs 
These are open to the public and may be used by anyone. There may or not be some authorization and cost associated with these types of APIs.

Partner APIs 
These are only accessible by authorized external developers to aid business-to-business partnerships.

Composite APIs 
These combine two or more different APIs to address complex system requirements or behaviors. 



## Web Services
    web services have :- 
    1. Is available over the Internet or private (intranet) networks
    2. Uses a standardized XML messaging system
    3. Is not tied to any one operating system or programming language
    4. Is self-describing via a common XML grammar
    5. Is discoverable via a simple find mechanism

    Components of Web Services
    The basic web services platform is XML + HTTP. All the standard web services work using the 
    following components −
    1. SOAP (Simple Object Access Protocol)
    2. UDDI (Universal Description, Discovery and Integration)
    3. WSDL (Web Services Description Language)

    How Does a Web Service Work?
    A web service enables communication among various applications by using open standards such as HTML, XML, WSDL, and SOAP. 
    A web service takes the help of −
    1. XML to tag the data
    2. SOAP to transfer a message
    3. WSDL to describe the availability of service.